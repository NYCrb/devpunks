#!/usr/bin/env bash

declare INPUT=$1
declare OUTPUT=$2

# Video Conversion for Cross Device with FFmpeg
# https://gist.github.com/jaydenseric/220c785d6289bcfd7366

# Scaling https://trac.ffmpeg.org/wiki/Scaling
# ffmpeg -i input.avi -vf scale=320:240 output.avi

# Faster Processing
# -threads n

# Quality
# Example flag: -crf 20.
# 0 is lossless, 23 is default, and 51 is worst possible. 18-28 is a sane range.

# Fast Start
# Flag: -movflags +faststart.
# Moves some data to the beginning of the file, allowing the video to be played before it is completely downloaded.


###################################################################################
###################################################################################

# Generates a cover image along with mute web-ready WebM and MP4 files for each master video in a folder.
# See: https://gist.github.com/jaydenseric/220c785d6289bcfd7366.

# Parameter 1: Input video format (e.g. "mov").
# Parameter 2: Output width in pixels (e.g. "1280").
# Example use: "./video4web.sh mov 1280".

for i in *.$1
  do

    echo $i

# Generate cover image
#   ffmpeg -i "$i" -vframes 1 -vf scale=$2:-2 -q:v 1 ${i%$1}jpg

# Generate WebM
#   ffmpeg -i "$i" -c:v libvpx -qmin 0 -qmax 25 -crf 4 -b:v 1M -vf scale=$2:-2 -an -threads 0 ${i%$1}webm

# Generate MP4
#   ffmpeg -i "$i" -c:v libx264 -pix_fmt yuv420p -profile:v baseline -level 3.0 -crf 22 -preset veryslow -vf scale=$2:-2 -an -movflags +faststart -threads 0 ${i%$1}mp4
  done
