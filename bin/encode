#!/usr/bin/env bash

declare -rx BIN=`dirname $0`

source $BIN/.arguments
source $BIN/.io
source $BIN/.display
source $BIN/.filters

declare -r  TIME=$( test "$STATS" && echo "time " )
declare -r  FFMPEG="$TIME$(which ffmpeg)"

declare -r  CORES=4
declare -r  MAPS="-map 0" # -map 0:a"
declare -r  THREADS="-threads $CORES -filter_threads $CORES -filter_complex_threads $CORES"
declare -r  STAMP="-copyts"
# declare -r BASE="-copytb -1"

# CODECS
declare -r  TUNE="-tune film"                           # Possible tunes: film animation grain stillimage psnr ssim fastdecode zerolatency
declare -r  PRESET="-preset superfast $TUNE"             # superfast, ultrafast, veryfast, fast, slow, veryslow
declare -r  AUDIO_CODEC="-ac 2 -c:a aac"                # Fraunhofer is best but need to compile `-c:a libfdk_aac`
declare -r  VIDEO_CODEC="-c:v libx264 -x264opts no-scenecut -coder 0" # (YouTube: By default CABAC is the entropy encoder used by x264.)
declare -r  CODECS="$PRESET $AUDIO_CODEC $VIDEO_CODEC"
declare -r  SYNC="-vsync vfr"                           #Video sync https://www.cleancss.com/explain-command/ffmpeg/6658
                                                        # 0 (passthrough), 1 (cfr), 2 (vfr), drop, auto
                                                        # (-async for audio)

# Keyframe interval (or GOP length). -g 15 varies on YouTube's FPS.(The default, 12, works for 24-25 fps. For NTSC and 30 fps, select 15.* FFMPEG option: -g, Not sure what youtube's default FPS is if it is 24 or 30. I assume 24 since the default 12 (or 15) would be half the frame rate
declare -r  KEYFRAMES="-g 24 -keyint_min 12"
# SAMPLE RATE &  FPS (Frame Rate Per Second) (Assume YouTube's default frame rate is 24FPS 48000Hz)
# 24000/1001 (23.976fps). 30000/1001 (29.970fps). 60000/1001 (59.94fps)
# PLACE BEFORE OUTPUT TO FORCE
# http://www.reduser.net/forum/showthread.php?102725-24P-or-23-976P-That-is-the-question
declare -r  FREQUENCY="$KEYFRAMES -r 24000/1001 -ar 48000"
declare -r  PROFILE="-profile:v baseline -level:v 3.0" # baseline, main, high
# declare -r  BITRATE="-b:a 128K -b:v 5M -bufsize 10M -minrate 1M -maxrate 5M -crf 18"
declare -r  BITRATE="-b:a 128K -crf 24"
                                                       # crf Guide - https://slhck.info/video/2017/02/24/crf-guide.html
                                                       # crf (constant rate factor) quality (51 worst, 0 lossless, 18-28 is sane, default 23)

$FFMPEG      \
  $STATS     \
  $SEEK      \
  $IN        \
  $FILTERS   \
$OUT
# $FORMAT    \
# $PROFILE   \
# $BASE      \
# $SYNC      \
# $STAMP     \
# $THREADS   \
# $FREQUENCY \
# $CODECS    \
# $QUICKTIME \
# $BITRATE   \

### 2-PASS https://slhck.info/video/2017/03/01/rate-control.html#2-pass-average-bitrate-2-pass-abr
# ffmpeg -i <input> -pass 1 -f mp4 /dev/null
# ffmpeg -i <input> -pass 2 <output>.mp4
